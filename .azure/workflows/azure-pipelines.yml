# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

parameters:
  - name: Proyecto
    type: string
    displayName: 'Seleccione proyecto'
    default: UserProfileService
    values:
    - UserProfileService
    - ContentManagementService
  - name: Testing
    type: boolean
    displayName: 'Ejecutar tests'
    default: true

trigger: none

jobs:
- job: Validations
  displayName: Infrastructure Validation
  pool:
    name: Windows
  steps:
  - task: AzureCLI@2
    displayName: Validate If Infrastructure Exist
    inputs:
      azureSubscription: 'Azure Connection'
      scriptType: 'ps'
      scriptLocation: 'inlineScript'
      inlineScript: |
        $planName = "JJP-CONT-RECO-${{ parameters.Proyecto }}"
        $resourceGroup = "jjpuente4"
        $plan = az appservice plan show -n $planName -g $resourceGroup --query "name" -o tsv
        
        if ($plan) {
          Write-Output "App Service Plan '$planName' already exists in resource group '$resourceGroup'."
          echo "PlanExists=true" >> $(Pipeline.Workspace)/variables.txt
        } else {
          Write-Output "App Service Plan '$planName' does not exist. Validation passed."
          echo "PlanExists=false" >> $(Pipeline.Workspace)/variables.txt
        }

- job: Infrastructure
  displayName: Set Up Infrastructure
  dependsOn: Validations
  condition: eq(variables['PlanExists'], 'false')
  pool:
    name: Windows
  steps:
  - task: AzureCLI@2
    displayName: Create App Service Plan & Web App
    inputs:
      azureSubscription: 'Azure Connection'
      scriptType: 'ps'
      scriptLocation: 'inlineScript'
      inlineScript: |
        $planAndAppName = "JJP-CONT-RECO-${{ parameters.Proyecto }}"
        $resourceGroup = "jjpuente4"

        az appservice plan create -n $planAndAppName -g $resourceGroup --sku B1
        az webapp create -n $planAndAppName -p $planAndAppName -g $resourceGroup

# - job: BuildAndTest
#   displayName: Build and Deploy
#   pool:
#     name: Windows
#   steps:
#   - task: DotNetCoreCLI@2
#     displayName: Restore projects
#     inputs:
#       command: 'restore'
#       projects: |
#         apps/${{ parameters.Proyecto }}/${{ parameters.Proyecto }}.csproj
#         tests/${{ parameters.Proyecto }}.Tests/${{ parameters.Proyecto }}.Tests.csproj
#       feedsToUse: 'select'
#   - task: DotNetCoreCLI@2
#     displayName: Build project
#     inputs:
#       command: 'build'
#       projects: 'apps/${{ parameters.Proyecto }}/${{ parameters.Proyecto }}.csproj'
#       arguments: '--no-restore'
#   - task: DotNetCoreCLI@2
#     displayName: Test project
#     condition: ${{ eq(parameters.Testing, true) }}
#     inputs:
#       command: 'test'
#       projects: 'tests/${{ parameters.Proyecto }}.Tests/${{ parameters.Proyecto }}.Tests.csproj'
#       arguments: '--no-restore'
#   - task: DotNetCoreCLI@2
#     displayName: Publish project
#     inputs:
#       command: 'publish'
#       projects: 'apps/${{ parameters.Proyecto }}/${{ parameters.Proyecto }}.csproj'
#       publishWebProjects: true
#   - task: AzureRmWebAppDeployment@4
#     displayName: Deploy project
#     inputs:
#       ConnectionType: 'AzureRM'
#       azureSubscription: 'Azure Connection'
#       appType: 'webApp'
#       WebAppName: 'JJP-CONT-RECO-${{ parameters.Proyecto }}'
#       packageForLinux: '$(System.DefaultWorkingDirectory)/apps/${{ parameters.Proyecto }}/bin/Release/**/*.zip'
    
